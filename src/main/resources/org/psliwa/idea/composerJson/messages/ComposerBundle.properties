name = PHP composer.json support

inspection.group = Composer.json
inspection.quickfix.removeQuotes = Remove quotes
inspection.quickfix.removeEntry = Remove entry
inspection.quickfix.removeDependency = Remove ''{0}'' dependency
inspection.quickfix.createProperty = Create ''{0}'' property
inspection.quickfix.createDirectory = Create directory: ''{0}''
inspection.quickfix.createFile = Create file: ''{0}''
inspection.quickfix.filepathCannotBeCreated = Filepath ''{0}'' cannot be created
inspection.quickfix.setPropertyValue = Set ''{0}'' to {1}
inspection.quickfix.excludePackagePattern = Exclude package ''{0}'' from 'unbounded version' inspection
inspection.quickfix.installNotInstalledPackages = Install all not installed packages
inspection.quickfix.setPackageVersion = Change version to ''{0}''
inspection.quickfix.setPackageEquivalentVersion = Change version to equivalent ''{0}''
inspection.quickfix.chooseValidValue = Choose valid value
inspection.schema.notAllowedProperty=The ''{0}'' property is not allowed here.
inspection.schema.notAllowedPropertyValue=Value ''{0}'' is not allowed here, it must be {1}.
inspection.schema.type=The value must be {0}, {1} given.
inspection.schema.format=The value must be {0}.
inspection.schema.required=The ''{0}'' property is required.
inspection.schema.alreadyDefinedProperty=Property ''{0}'' is already defined.
inspection.filePath.fileMissing=File ''{0}'' does not exist.
inspection.misconfig.notStableProject=Misconfiguration: Package of type 'project' and minimum stability other than 'stable' should prefer stable packages - otherwise unstable packages could be installed in your project. See "quick fixes" (Alt+Enter) to resolve this problem.
inspection.misconfig.missingLicense=No license specified, it is recommended to do so. For closed-source software you may use "proprietary" as license.
inspection.misconfig.camelCaseName=Name does not match the best practice (e.g. lower-cased/with-dashes). We suggest changing it using quick fix - as such you will not be able to submit it to Packagist.
inspection.misconfig.requireDuplication=Package is required both in require and require-dev, this can lead to unexpected behavior.
inspection.misconfig.emptyPsrNamespace=Defining autoload.psr-0 or autoload.psr-4 with an empty namespace prefix is a bad idea for performance.
inspection.misconfig.commitRefAsVersion=The package is pointing to a commit-ref, this is bad practice and can cause unforeseen issues.
inspection.misconfig.composerInstaller=The package type 'composer-installer' is deprecated. Please distribute your custom installers as plugins from now on. See https://getcomposer.org/doc/articles/plugins.md for plugin documentation.
inspection.misconfig.requiredForLibrary=The ''{0}'' property is required for packages that are not 'project'.
inspection.version.unboundVersion=The version constraint has no upper bound - this is not a good idea. See https://getcomposer.org/doc/faqs/why-are-unbound-version-constraints-a-bad-idea.md for more information.
inspection.version.wildcardAndComparison=The version constraint combining wildcard and comparison makes no sense and is invalid.
inspection.notInstalledPackage.packageIsNotInstalled=Package ''{0}'' is not installed.
inspection.notInstalledPackage.installing=Packages installing...
inspection.notInstalledPackage.errorTitle=Failed to install ''{0}''
inspection.notInstalledPackage.successTitle=Package(s) installed
inspection.notInstalledPackage.success=Package(s) ''{0}'' successfully installed.
inspection.notInstalledPackage.cancelledTitle=Package(s) installation cancelled
inspection.notInstalledPackage.cancelled=Package(s) ''{0}'' installation cancelled.
inspection.php.methodDoesNotExist=Method ''{0}'' does not exist.
inspection.php.methodIsNotPublic=Method ''{0}'' is not public.
inspection.php.methodIsNotStatic=Method ''{0}'' is not static.
inspection.php.methodIsAbstract=Method ''{0}'' is abstract.
inspection.php.invalidParameterType=First parameter type of ''{0}'' is invalid.
inspection.php.tooManyArgs=Method ''{0}'' has too many arguments.
inspection.php.methodIsEmpty=Method is empty.
inspection.php.classDoesNotExist=Class ''{0}'' does not exist.
settings.unboundedPackageVersion.label=Unbounded version inspection exclusions. Excluded packages from "version unbounded" inspection ("*" wildcard is supported):
settings.unboundedPackageVersion=Unbounded version inspection settings
settings.customRepositories.label=Custom repositories code completion support
settings.customRepositories = Custom repositories settings
settings.composerUpdateOptions = "composer update" options
settings.composerUpdateOptions.label=\
  <html>Options passed to "composer update" command, including double dash "--".\
  <br/><br/><b>Attention</b>: those options are passed only when you install dependencies using composer.json plugin\
  <br/>via "Install all not installed packages" quick fix for packages in composer.json file. It doesn't work with\
  <br/>native composer support.</html>
error.directoryCreationError=Directory creation error
notifications.group.log = composerJsonLog
notifications.group.balloon = composerJsonBalloon
editorNotifications.customRepositories = Do you want to enable custom repositories code completion support for this file (eg. satis repositories)? It may impact completion performance if custom repositories are really big.
editorNotifications.customRepositories.yes = Yes, sure
editorNotifications.customRepositories.no = No, thanks